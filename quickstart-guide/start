#!/bin/bash -ex

set +x 

rm -rf .env
docker-compose down -v

docker-compose build
docker-compose up -d conjur
docker-compose up -d proxy
docker-compose exec -T conjur conjurctl wait -r 240

admin_api_key=$(docker-compose exec -T conjur conjurctl role retrieve-key dev:user:admin | tr -d '\r')
export CONJUR_AUTHN_API_KEY=$admin_api_key

conjur_host_port=$(docker-compose port conjur 80)
conjur_port="${conjur_host_port##*:}"

# Remove files from tmp but avoid recreating the folder to
# avoid cache busting
mkdir -p tmp
rm -rf tmp/*

echo "${admin_api_key}" > api_key
export CONJUR_AUTHN_TOKEN_FILE="/api_key"

cat <<ENV > .env
CONJUR_APPLIANCE_URL=https://proxy
CONJUR_ACCOUNT=dev
CONJUR_AUTHN_LOGIN=admin
CONJUR_AUTHN_API_KEY=$admin_api_key
CONJUR_CERT_FILE="/conjur-dev.pem"
CONJUR_AUTHN_TOKEN_FILE="/api_key"
ENV

source .env

docker-compose run \
  --volume "${PWD}:${PWD}" \
  --workdir "${PWD}" \
  --rm \
  --no-deps \
  client \
  -ec '
   yes yes | conjur init -a dev -u https://proxy
   cp /root/conjur-dev.pem .
   conjur variable values add db/password secret
   conjur variable values add db/dbuserName 123456
   conjur variable values add db/dbpassWord 7890123
   conjur variable values add db/key 456789
   conjur variable values add "my var" othersecret
  '

sleep 2

docker-compose run \
  --volume "$(git rev-parse --show-toplevel):/repo" \
  --volume "${PWD}/maven_cache":/root/.m2 \
  --volume "${PWD}/api_key:/api_key" \
  --volume "${PWD}/conjur-dev.pem:/conjur-dev.pem" \
  -e CONJUR_AUTHN_TOKEN_FILE \
  --workdir "/repo" \
  --no-deps \
  --rm \
  --entrypoint /bin/bash \
app \
  -ec 'mvn --batch-mode -f pom.xml jacoco:prepare-agent test jacoco:report'


 cp ../target/site/jacoco/jacoco.xml ../src/main/java
